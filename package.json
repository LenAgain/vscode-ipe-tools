{
    "name": "ipe-tools",
    "displayName": "Ipe Tools",
    "author": "LenAgain",
    "publisher": "lenagain",
    "description": "Tools for integrating the Ipe extensible drawing editor into VS Code",
    "license": "GPL-3.0-or-later",
    "repository": {
        "url": "https://github.com/LenAgain/vscode-ipe-tools.git",
        "type": "git"
    },
    "version": "0.0.1",
    "preview": true,
    "categories": [
        "Other"
    ],
    "activationEvents": [
        "onLanguage:latex"
    ],
    "contributes": {
        "commands": [
            {
                "command": "ipe-tools.insertFigure",
                "title": "Ipe: Insert Figure"
            },
            {
                "command": "ipe-tools.newFigure",
                "title": "Ipe: New Figure"
            },
            {
                "command": "ipe-tools.editFigure",
                "title": "Ipe: Edit Figure"
            }
        ],
        "menus": {
            "explorer/context": [
                {
                    "command": "ipe-tools.editFigure",
                    "when": "resourceExtname == .ipe",
                    "group": "7_modification"
                }
            ]
        },
        "configuration": [
            {
                "title": "Ipe Tools",
                "properties": {
                    "ipe-tools.executable": {
                        "markdownDescription": "The path to the `ipe` executable.",
                        "order": 10,
                        "type": "string",
                        "scope": "resource",
                        "default": "ipe"
                    },
                    "ipe-tools.ipeSnippet": {
                        "markdownDescription": "The snippet string to insert when running `ipe-tools.insertIpeFigure`. This can be any snippet, but should use the `TM_SELECTED_TEXT` variable in its first placeholder in order to work properly. The figure name is inserted, and then the snippet is inserted while the figure name is selected. This can be a single string or an array of lines.",
                        "order": 20,
                        "type": [
                            "string",
                            "array"
                        ],
                        "items": {
                            "type": "string"
                        },
                        "scope": "resource",
                        "default": "\\ipefig{${1:${TM_SELECTED_TEXT}}}"
                    },
                    "ipe-tools.figureRegex": {
                        "markdownDescription": "A regex pattern to search the current line for a snippet name when running `ipe-tools.editFigure`. It must have a capturing group named `figureName`.",
                        "order": 25,
                        "type": "string",
                        "scope": "resource",
                        "default": "\\\\ipefig{(?<figureName>\\w+)}"
                    },
                    "ipe-tools.figureDirectory": {
                        "markdownDescription": "The directory relative to the current document in which to create new figures when running `ipe-tools.insertFigure`, or when dropping or pasting external media.",
                        "order": 30,
                        "type": "string",
                        "scope": "resource",
                        "default": "figures"
                    },
                    "ipe-tools.externalSnippet": {
                        "markdownDescription": "The snippet string to insert when dropping or pasting external media. This can be any plain string or snippet. Use the `%f` placeholder for the figure name. This can be a single string or an array of lines.",
                        "order": 40,
                        "type": [
                            "string",
                            "array"
                        ],
                        "items": {
                            "type": "string"
                        },
                        "scope": "resource",
                        "default": "\\extfig{%f}"
                    }
                }
            }
        ]
    },
    "engines": {
        "vscode": "^1.78.0"
    },
    "enabledApiProposals": [
        "documentPaste"
    ],
    "main": "./out/extension.js",
    "scripts": {
        "vscode:prepublish": "npm run compile",
        "compile": "tsc -p ./",
        "watch": "tsc -watch -p ./",
        "pretest": "npm run compile && npm run lint",
        "lint": "eslint src --ext ts",
        "test": "node ./out/test/runTest.js"
    },
    "devDependencies": {
        "@types/vscode": "^1.78.0",
        "@types/glob": "^8.1.0",
        "@types/mocha": "^10.0.1",
        "@types/node": "16.x",
        "@typescript-eslint/eslint-plugin": "^5.56.0",
        "@typescript-eslint/parser": "^5.56.0",
        "eslint": "^8.36.0",
        "glob": "^8.1.0",
        "mocha": "^10.2.0",
        "typescript": "^4.9.5",
        "@vscode/test-electron": "^2.3.0",
        "@vscode/dts": "^0.4.0"
    }
}
